[tool.poetry]
name = "pdpcli"
version = "0.4.1"
description = "PdpCLI is a pandas DataFrame processing CLI tool which enables you to build a pandas pipeline from a configuration file."
authors = ["altescy <altescy@fastmail.com>"]
license = "MIT License"
readme = "README.md"
homepage = "https://github.com/altescy/pdpcli"
keywords=["python", "cli", "pandas", "csv"]
classifiers=[
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
]
packages = [
    { include = "pdpcli" }
]

[tool.poetry.dependencies]
python = "^3.8"
pandas = "^1.2.2"
pdpipe = "^0.0.53"
omegaconf = "^2.0.6"
jsonnet = "^0.17.0"
colt = "^0.7.1"
sqlalchemy = "^1.3.23"
nltk = "^3.5"
scikit-learn = "^0.24.1"
mysqlclient = {version = "^2.0.3", optional = true}
psycopg2 = {version = "^2.8.6", optional = true}
minato = {version = "^0.6.0", extras = ["all"]}

[tool.poetry.dev-dependencies]
pytest = "^5.2"
python-language-server = "^0.36.2"
ipython = "^7.20.0"
pysen = {version = "^0.9.1", extras = ["lint"]}

[tool.poetry.extras]
mysql = ["mysqlclient"]
pgsql = ["psycopg2"]
all = ["mysqlclient", "psycopg2"]

[tool.poetry.scripts]
pdp = "pdpcli.__main__:run"

[tool.pysen]
version = "0.9"

[tool.pysen-cli]
settings_dir = "."

[tool.pysen.lint]
enable_black = true
enable_flake8 = true
enable_isort = true
enable_mypy = true
mypy_preset = "strict"
line_length = 88
py_version = "py38"
[[tool.pysen.lint.mypy_targets]]
  paths = ["pdpcli/"]

[tool.pysen.lint.source]
  includes = ["pdpcli/"]
  excludes = [".venv/"]

[tool.black] # automatically generated by pysen
line-length = 88
target-version = ["py38"]

[tool.isort] # automatically generated by pysen
default_section = "THIRDPARTY"
ensure_newline_before_comments = true
force_grid_wrap = 0
force_single_line = false
include_trailing_comma = true
line_length = 88
multi_line_output = 3
use_parentheses = true

[tool.pytest.ini_options]
testpaths = ["tests/"]
log_format = "%(asctime)s - %(levelname)s - %(name)s - %(message)s"
log_level = "DEBUG"
markers = ["java"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
